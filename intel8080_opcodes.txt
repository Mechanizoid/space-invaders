Table of Intel 8080 Opcodes

========================================================================================================================

Hex   Instruction   Bit Pattern	(1st byte)	Size	Flags		Description
0x00  NOP	    [ 0 0 0 0  0 0 0 0 ]	1	-		No operation performed
0x01  LXI B, D16    [ 0 0 0 0  0 0 0 1 ]	3	-		(B) <- (byte 3), (C) <- (byte 2)
0x02  STAX B 	    [ 0 0 0 0  0 0 1 0 ]	1	-		((B-C)) <- (A)
0x03  INX B	    [ 0 0 0 0  0 0 1 1 ]	1	-		(B) (C) <- (B) (C) + 1
0x04  INR B	    [ 0 0 0 0  0 1 0 0 ]	1	Z,S,P,AC	(B) <- (B) + 1
0x05  DCR B 	    [ 0 0 0 0  0 1 0 1 ]	1	Z,S,P,AC	(B) <- (B) - 1
0x06  MVI B, D8	    [ 0 0 0 0  0 1 1 0 ]	2	-		(B) <- (byte 2)
0x07  RLC    	    [ 0 0 0 0  0 1 1 1 ]	1	CY		A <- A << 1; bit 0 <- prev bit 7; CY <- prev bit 7
0x08  *NOP
0x09  DAD B	    [ 0 0 0 0  1 0 0 1 ]	1	CY		(H)(L) <- (H)(L) + (B)(C)
0x0A  LDAX B	    [ 0 0 0 0  1 0 1 0 ]	1	-		(A) <- ((B-C)
0x0B  DCX B	    [ 0 0 0 0  1 0 1 1 ]	1	-		(B)(C) <- (B)(C) - 1
0x0C  INR C 	    [ 0 0 0 0  1 1 0 0 ]	1	Z,S,P,AC	(C) <- (C) + 1
0x0D  DCR C 	    [ 0 0 0 0  1 1 0 1 ]	1	Z,S,P,AC	(C) <- (C) - 1
0x0E  MVI C, D8	    [ 0 0 0 0  1 1 1 0 ]	2	-		(C) <- (byte 2)
0x0F  RRC    	    [ 0 0 0 0  1 1 1 1 ]	1	CY		(A) <- (A >> 1); bit 7 <- prev bit 0; CY <- prev bit 0
0x10  *NOP
0x11  LXI D, D16    [ 0 0 0 1  0 0 0 1 ]	3	-		(D) <- (byte 3), (E) <- (byte 2)
0x12  STAX D 	    [ 0 0 0 1  0 0 1 0 ]	1	-		((D-E)) <- (A)
0x13  INX D	    [ 0 0 0 1  0 0 1 1 ]	1	-		(D) (E) <- (D) (E) + 1
0x14  INR D 	    [ 0 0 0 1  0 1 0 0 ]	1	Z,S,P,AC	(D) <- (D) + 1
0x15  DCR D 	    [ 0 0 0 1  0 1 0 1 ]	1	Z,S,P,AC	(D) <- (D) - 1
0x16  MVI D, D8	    [ 0 0 0 1  0 1 1 0 ]	2	-		(D) <- (byte 2)
0x17  RAL    	    [ 0 0 0 1  0 1 1 1 ]	1	CY		(A) <- (A << 1); bit 0 <- prev CY; CY <- prev bit 7
0x18  *NOP
0x19  DAD D	    [ 0 0 0 1  1 0 0 1 ]	1	CY		(H)(L) <- (H)(L) + (D)(E)
0x1A  LDAX D        [ 0 0 0 1  1 0 1 0 ]	1	-		(A) <- ((D-E))
0x1B  DCX D	    [ 0 0 0 1  1 0 1 1 ]	1	-		(D)(E) <- (D)(E) - 1
0x1C  INR E 	    [ 0 0 0 1  1 1 0 0 ]	1	Z,S,P,AC	(E) <- (E) + 1
0x1D  DCR E 	    [ 0 0 0 1  1 1 0 1 ]	1	Z,S,P,AC	(E) <- (E) - 1
0x1E  MVI E, D8	    [ 0 0 0 1  1 1 1 0 ]	2	-		(E) <- (byte 2)
0x1F  RAR    	    [ 0 0 0 1  1 1 1 1 ]	1	CY		(A) <- (A >> 1); bit 7 <- prev CY; CY <- prev bit 0
0x20  *NOP
0x21  LXI H, D16    [ 0 0 1 0  0 0 0 1 ]	3	-		(H) <- (byte 3), (L) <- (byte 2)
0x22  SHLD addr	    [ 0 0 1 0  0 0 1 0 ]	3	-		addr <- (L), addr + 1 <- (H)
0x23  INX H	    [ 0 0 1 0  0 0 1 1 ]	1	-		(H) (L) <- (H) (L) + 1
0x24  INR H 	    [ 0 0 1 0  0 1 0 0 ]	1	Z,S,P,AC	(H) <- (H) + 1
0x25  DCR H 	    [ 0 0 1 0  0 1 0 1 ]	1	Z,S,P,AC	(H) <- (H) - 1
0x26  MVI H, D8	    [ 0 0 1 0  0 1 1 0 ]	2	-		(H) <- (byte 2)
0x27  DAA 	    [ 0 0 1 0  0 1 1 1 ]	1	Z,S,P,CY,AC	special
0x28  *NOP
0x29  DAD H	    [ 0 0 1 0  1 0 0 1 ]	1	CY		(H)(L) <- (H)(L) + (H)(L)
0x2A  LHLD addr	    [ 0 0 1 0  1 0 1 0 ]	3	-		(L) <- addr, (H) <- addr + 1
0x2B  DCX H	    [ 0 0 1 0  1 0 1 1 ]	1	-		(H)(L) <- (H)(L) - 1
0x2C  INR L 	    [ 0 0 1 0  1 1 0 0 ]	1	Z,S,P,AC	(L) <- (L) + 1
0x2D  DCR L 	    [ 0 0 1 0  1 1 0 1 ]	1	Z,S,P,AC	(L) <- (L) - 1
0x2E  MVI L, D8	    [ 0 0 1 0  1 1 1 0 ]	2	-		(L) <- (byte 2)
0x2F  CMA    	    [ 0 0 1 0  1 1 1 1 ]	1	-		(A) <- (~A)
0x30  *NOP
0x31  LXI SP, D16   [ 0 0 1 1  0 0 0 1 ]	3	-		(SP.hi) <- (byte 3), (SP.lo) <- (byte 2)
0x32  STA addr	    [ 0 0 1 1  0 0 1 0 ]	3	-		addr ((byte3) (byte2)) <- A
0x33  INX SP	    [ 0 0 1 1  0 0 1 1 ]	1	-		(SP) <- (SP) + 1
0x34  INR M 	    [ 0 0 1 1  0 1 0 0 ]	1	Z,S,P,AC	((H) (L)) <- ((H) (L)) + 1
0x35  DCR M 	    [ 0 0 1 1  0 1 0 1 ]	1	Z,S,P,AC	((H) (L)) <- ((H) (L)) - 1
0x36  MVI M, D8	    [ 0 0 1 1  0 1 1 0 ]	2	-		((H) (L)) <- (byte 2)
0x37  STC    	    [ 0 0 1 1  0 1 1 1 ]	1	CY		(CY) <- 1
0x38  *NOP
0x39  DAD SP	    [ 0 0 1 1  1 0 0 1 ]	1	CY		(H)(L) <- (H)(L) + (SP.hi)(SP.lo)
0x3A  LDA addr	    [ 0 0 1 1  1 0 1 0 ]	3	-		(A) <- addr 
0x3B  DCX SP	    [ 0 0 1 1  1 0 1 1 ]	1	-		(SP) <- (SP) - 1
0x3C  INR A 	    [ 0 0 1 1  1 1 0 0 ]	1	Z,S,P,AC	(A) <- (A) + 1
0x3D  DCR A 	    [ 0 0 1 1  1 1 0 1 ]	1	Z,S,P,AC	(A) <- (A) - 1
0x3E  MVI A, D8	    [ 0 0 1 1  1 1 1 0 ]	2	-		(A) <- (byte 2)
0x3F  CMC    	    [ 0 0 1 1  1 1 1 1 ]	1	CY		(CY) <- (~CY)
0x40  MOV B, B	    [ 0 1 0 0  0 0 0 0 ]	1	-		(B) <- (B)
0x41  MOV B, C	    [ 0 1 0 0  0 0 0 1 ]	1	-		(B) <- (C)
0x42  MOV B, D	    [ 0 1 0 0  0 0 1 0 ]	1	-		(B) <- (D)
0x43  MOV B, E	    [ 0 1 0 0  0 0 1 1 ]	1	-		(B) <- (E)
0x44  MOV B, H	    [ 0 1 0 0  0 1 0 0 ]	1	-		(B) <- (H)
0x45  MOV B, L	    [ 0 1 0 0  0 1 0 1 ]	1	-		(B) <- (L)
0x46  MOV B, M	    [ 0 1 0 0  0 1 1 0 ]	1	-		(B) <- ((H) (L))
0x47  MOV B, A	    [ 0 1 0 0  0 1 1 1 ]	1	-		(B) <- (A)
0x48  MOV C, B	    [ 0 1 0 0  1 0 0 0 ]	1	-		(C) <- (B)
0x49  MOV C, C	    [ 0 1 0 0  1 0 0 1 ]	1	-		(C) <- (C)
0x4A  MOV C, D	    [ 0 1 0 0  1 0 1 0 ]	1	-		(C) <- (D)
0x4B  MOV C, E	    [ 0 1 0 0  1 0 1 1 ]	1	-		(C) <- (E)
0x4C  MOV C, H	    [ 0 1 0 0  1 1 0 0 ]	1	-		(C) <- (H)
0x4D  MOV C, L	    [ 0 1 0 0  1 1 0 1 ]	1	-		(C) <- (L)
0x4E  MOV C, M	    [ 0 1 0 0  1 1 1 0 ]	1	-		(C) <- ((H) (L))
0x4F  MOV C, A	    [ 0 1 0 0  1 1 1 1 ]	1	-		(C) <- (A)	
0x50  MOV D, B	    [ 0 1 0 1  0 0 0 0 ]	1	-		(D) <- (B)
0x51  MOV D, C	    [ 0 1 0 1  0 0 0 1 ]	1	-		(D) <- (C)
0x52  MOV D, D	    [ 0 1 0 1  0 0 1 0 ]	1	-		(D) <- (D)
0x53  MOV D, E	    [ 0 1 0 1  0 0 1 1 ]	1	-		(D) <- (E)
0x54  MOV D, H	    [ 0 1 0 1  0 1 0 0 ]	1	-		(D) <- (H)
0x55  MOV D, L	    [ 0 1 0 1  0 1 0 1 ]	1	-		(D) <- (L)
0x56  MOV D, M	    [ 0 1 0 1  0 1 1 0 ]	1	-		(D) <- ((H) (L))
0x57  MOV D, A	    [ 0 1 0 1  0 1 1 1 ]	1	-		(D) <- (A)
0x58  MOV E, B	    [ 0 1 0 1  1 0 0 0 ]	1	-		(E) <- (B)
0x59  MOV E, C	    [ 0 1 0 1  1 0 0 1 ]	1	-		(E) <- (C)
0x5A  MOV E, D	    [ 0 1 0 1  1 0 1 0 ]	1	-		(E) <- (D)
0x5B  MOV E, E	    [ 0 1 0 1  1 0 1 1 ]	1	-		(E) <- (E)
0x5C  MOV E, H	    [ 0 1 0 1  1 1 0 0 ]	1	-		(E) <- (H)
0x5D  MOV E, L	    [ 0 1 0 1  1 1 0 1 ]	1	-		(E) <- (L)
0x5E  MOV E, M	    [ 0 1 0 1  1 1 1 0 ]	1	-		(E) <- ((H) (L))
0x5F  MOV E, A	    [ 0 1 0 1  1 1 1 1 ]	1	-		(E) <- (A)
0x60  MOV H, B	    [ 0 1 1 0  0 0 0 0 ]	1	-		(H) <- (B)
0x61  MOV H, C	    [ 0 1 1 0  0 0 0 1 ]	1	-		(H) <- (C)
0x62  MOV H, D	    [ 0 1 1 0  0 0 1 0 ]	1	-		(H) <- (D)
0x63  MOV H, E	    [ 0 1 1 0  0 0 1 1 ]	1	-		(H) <- (E)
0x64  MOV H, H	    [ 0 1 1 0  0 1 0 0 ]	1	-		(H) <- (H)
0x65  MOV H, L	    [ 0 1 1 0  0 1 0 1 ]	1	-		(H) <- (L)
0x66  MOV H, M	    [ 0 1 1 0  0 1 1 0 ]	1	-		(H) <- ((H) (L))
0x67  MOV H, A	    [ 0 1 1 0  0 1 1 1 ]	1	-		(H) <- (A)
0x68  MOV L, B	    [ 0 1 1 0  1 0 0 0 ]	1	-		(L) <- (B)
0x69  MOV L, C	    [ 0 1 1 0  1 0 0 1 ]	1	-		(L) <- (C)
0x6A  MOV L, D	    [ 0 1 1 0  1 0 1 0 ]	1	-		(L) <- (D)
0x6B  MOV L, E	    [ 0 1 1 0  1 0 1 1 ]	1	-		(L) <- (E)
0x6C  MOV L, H	    [ 0 1 1 0  1 1 0 0 ]	1	-		(L) <- (H)
0x6D  MOV L, L	    [ 0 1 1 0  1 1 0 1 ]	1	-		(L) <- (L)
0x6E  MOV L, M	    [ 0 1 1 0  1 1 1 0 ]	1	-		(L) <- (M)
0x6F  MOV L, A	    [ 0 1 1 0  1 1 1 1 ]	1	-		(L) <- (A)
0x70  MOV M, B	    [ 0 1 1 1  0 0 0 0 ]	1	-		((H) (L)) <- (B)
0x71  MOV M, C	    [ 0 1 1 1  0 0 0 1 ]	1	-		((H) (L)) <- (C)
0x72  MOV M, D	    [ 0 1 1 1  0 0 1 0 ]	1	-		((H) (L)) <- (D)
0x73  MOV M, E	    [ 0 1 1 1  0 0 1 1 ]	1	-		((H) (L)) <- (E)
0x74  MOV M, H	    [ 0 1 1 1  0 1 0 0 ]	1	-		((H) (L)) <- (H)
0x75  MOV M, L	    [ 0 1 1 1  0 1 0 1 ]	1	-		((H) (L)) <- (L)
0x76  HLT    	    [ 0 1 1 1  0 1 1 0 ]	1	-		Halt, special
0x77  MOV M, A	    [ 0 1 1 1  0 1 1 1 ]	1	-		((H) (L)) <- (A)
0x78  MOV A, B	    [ 0 1 1 1  1 0 0 0 ]	1	-		(A) <- (B)
0x79  MOV A, C	    [ 0 1 1 1  1 0 0 1 ]	1	-		(A) <- (C)
0x7A  MOV A, D	    [ 0 1 1 1  1 0 1 0 ]	1	-		(A) <- (D)
0x7B  MOV A, E	    [ 0 1 1 1  1 0 1 1 ]	1	-		(A) <- (E)
0x7C  MOV A, H	    [ 0 1 1 1  1 1 0 0 ]	1	-		(A) <- (H)
0x7D  MOV A, L	    [ 0 1 1 1  1 1 0 1 ]	1	-		(A) <- (L)	    
0x7E  MOV A, M	    [ 0 1 1 1  1 1 1 0 ]	1	-		(A) <- ((H) (L))
0x7F  MOV A, A	    [ 0 1 1 1  1 1 1 1 ]	1	-		(A) <- (A)
0x80  ADD B  	    [ 1 0 0 0  0 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + (B)
0x81  ADD C	    [ 1 0 0 0  0 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (C)
0x82  ADD D	    [ 1 0 0 0  0 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + (D)
0x83  ADD E	    [ 1 0 0 0  0 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (E)
0x84  ADD H	    [ 1 0 0 0  0 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + (H)
ox85  ADD L	    [ 1 0 0 0  0 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (L)
0x86  ADD M	    [ 1 0 0 0  0 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- ((H)(L))
0x87  ADD A	    [ 1 0 0 0  0 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (A)
0x88  ADC B	    [ 1 0 0 0  1 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + (B) + (CY)
0x89  ADC C	    [ 1 0 0 0  1 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (C) + (CY)
0x8A  ADC D	    [ 1 0 0 0  1 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + (D) + (CY)
0x8B  ADC E	    [ 1 0 0 0  1 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (E) + (CY)
0x8C  ADC H	    [ 1 0 0 0  1 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + (H) + (CY)
0x8D  ADC L	    [ 1 0 0 0  1 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (L) + (CY)
0x8E  ADC M	    [ 1 0 0 0  1 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) + ((H) (L)) + (CY)
0x8F  ADC A	    [ 1 0 0 0  1 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) + (A) + (CY)
0x90  SUB B	    [ 1 0 0 1  0 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - (B)
0x91  SUB C	    [ 1 0 0 1  0 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (C)
0x92  SUB D	    [ 1 0 0 1  0 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - (D)
0x93  SUB E	    [ 1 0 0 1  0 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (E)
0x94  SUB H	    [ 1 0 0 1  0 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - (H)
0x95  SUB L	    [ 1 0 0 1  0 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (L)
0x96  SUB M	    [ 1 0 0 1  0 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - ((H) (L))
0x97  SUB A	    [ 1 0 0 1  0 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (A)
0x98  SBB B	    [ 1 0 0 1  1 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - (B) - (CY)
0x99  SBB C	    [ 1 0 0 1  1 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (C) - (CY)
0x9A  SBB D	    [ 1 0 0 1  1 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - (D) - (CY)
0x9B  SBB E	    [ 1 0 0 1  1 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (E) - (CY)
0x9C  SBB H	    [ 1 0 0 1  1 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - (H) - (CY)
0x9D  SBB L	    [ 1 0 0 1  1 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (L) - (CY)
0x9E  SBB M	    [ 1 0 0 1  1 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) - ((H) (L)) - (CY)
0x9F  SBB A	    [ 1 0 0 1  1 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) - (A) - (CY)
0xA0  ANA B	    [ 1 0 1 0  0 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) & (B)
0xA1  ANA C	    [ 1 0 1 0  0 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) & (C)
0xA2  ANA D	    [ 1 0 1 0  0 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) & (D)
0xA3  ANA E	    [ 1 0 1 0  0 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) & (E)
0xA4  ANA H	    [ 1 0 1 0  0 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) & (H)
0xA5  ANA L	    [ 1 0 1 0  0 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) & (L)
0xA6  ANA M	    [ 1 0 1 0  0 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) & ((H) (L))
0xA7  ANA A	    [ 1 0 1 0  0 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) & (A)
0xA8  XRA B	    [ 1 0 1 0  1 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (B)
0xA9  XRA C	    [ 1 0 1 0  1 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (C)
0xAA  XRA D	    [ 1 0 1 0  1 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (D)
0xAB  XRA E	    [ 1 0 1 0  1 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (E)
0xAC  XRA H	    [ 1 0 1 0  1 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (H)
0xAD  XRA L	    [ 1 0 1 0  1 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (L)
0xAE  XRA M	    [ 1 0 1 0  1 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ ((H) (L))
0xAF  XRA A	    [ 1 0 1 0  1 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) ^ (A)
0xB0  ORA B	    [ 1 0 1 1  0 0 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) | (B)
0xB1  ORA C	    [ 1 0 1 1  0 0 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) | (C)
0xB2  ORA D	    [ 1 0 1 1  0 0 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) | (D)
0xB3  ORA E	    [ 1 0 1 1  0 0 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) | (E)
0xB4  ORA H	    [ 1 0 1 1  0 1 0 0 ]	1	Z,S,P,CY,AC	(A) <- (A) | (H)
0xB5  ORA L	    [ 1 0 1 1  0 1 0 1 ]	1	Z,S,P,CY,AC	(A) <- (A) | (L)
0xB6  ORA M	    [ 1 0 1 1  0 1 1 0 ]	1	Z,S,P,CY,AC	(A) <- (A) | ((H) (L))
0xB7  ORA A	    [ 1 0 1 1  0 1 1 1 ]	1	Z,S,P,CY,AC	(A) <- (A) | (A)
0xB8  CMP B	    [ 1 0 1 1  1 0 0 0 ]	1	Z,S,P,CY,AC	(A) - (B)
0xB9  CMP C	    [ 1 0 1 1  1 0 0 1 ]	1	Z,S,P,CY,AC	(A) - (C)
0xBA  CMP D	    [ 1 0 1 1  1 0 1 0 ]	1	Z,S,P,CY,AC	(A) - (D)
0xBB  CMP E	    [ 1 0 1 1  1 0 1 1 ]	1	Z,S,P,CY,AC	(A) - (E)
0xBC  CMP H	    [ 1 0 1 1  1 1 0 0 ]	1	Z,S,P,CY,AC	(A) - (H)
0xBD  CMP L	    [ 1 0 1 1  1 1 0 1 ]	1	Z,S,P,CY,AC	(A) - (L)
0xBE  CMP M	    [ 1 0 1 1  1 1 1 0 ]	1	Z,S,P,CY,AC	(A) - ((H) (L))
0xBF  CMP A	    [ 1 0 1 1  1 1 1 1 ]	1	Z,S,P,CY,AC	(A) - (A)
0xC0  RNZ	    [ 1 1 0 0  0 0 0 0 ]	1	-		If (Z = 0), RET
0xC1  POP B	    [ 1 1 0 0  0 0 0 1 ]	1	-		(C) <- ((SP)); (B) <- ((SP) + 1); (SP) <- (SP) + 2 
0xC2  JNZ A16	    [ 1 1 0 0  0 0 1 0 ]	3	-		If (Z = 1), PC <- (byte 3)(byte 2)
0xC3  JMP A16	    [ 1 1 0 0  0 0 1 1 ]	3	-		(PC) <- (byte 3)(byte 2)
0xC4  CNZ A16	    [ 1 1 0 0  0 1 0 0 ]	3	-		If (Z = 0), CALL a16
0xC5  PUSH B	    [ 1 1 0 0  0 1 0 1 ]	1	-		((SP) - 1) <- (B); ((SP) - 1 <- (C)); (SP) <- (SP) - 2
0xC6  ADI D8	    [ 1 1 0 0  0 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) + (byte 2)
0xC7  RST 0	    [ 1 1 0 0  0 1 1 1 ]	1	-		CALL 0x00
0xC8  RZ	    [ 1 1 0 0  1 0 0 0 ]	1	-		If (Z = 1), RET
0xC9  RET 	    [ 1 1 0 0  1 0 0 1 ]	1	-		(PCL) <- (SP); (PCH) <- (SP + 1); (SP) <- (SP) + 2
0xCA  JZ  A16	    [ 1 1 0 0  1 0 1 0 ]	3	-		If (Z = 0), PC <- (byte 3)(byte 2)
0xCB
0xCC  CZ A16	    [ 1 1 0 0  1 1 0 0 ]	3	-		If (Z = 1), CALL a16
0xCD  CALL A16	    [ 1 1 0 0  1 1 0 1 ]	3	-		((SP) - 1) <- PCH; ((SP) - 2) <- PCL; (SP) <- (SP) - 2; PC <- (byte 3)(byte2)
0xCE  ACI D8	    [ 1 1 0 0  1 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) + (byte 2) + (CY)
0xCF  RST 1	    [ 1 1 0 0  1 1 1 1 ]	1	-		CALL 0x08
0xD0  RNC	    [ 1 1 0 1  0 0 0 0 ]	1	-		If (CY = 0), RET
0xD1  POP C	    [ 1 1 0 1  0 0 0 1 ]	1	-		(D) <- ((SP)); (E) <- ((SP) + 1); (SP) <- (SP) + 2 
0xD2  JNC A16	    [ 1 1 0 1  0 0 1 0 ]	3	-		If (CY = 0), PC <- (byte 3)(byte 2)
0xD3  OUT P8	    [ 1 1 0 1  0 0 1 1 ]	2	-		(data) <- (A)
0xD4  CNC A16	    [ 1 1 0 1  0 1 0 0 ]	3	-		If (CY = 0), CALL a16
0xD5  PUSH D	    [ 1 1 0 1  0 1 0 1 ]	1	-		((SP) - 1) <- (D); ((SP) - 1 <- (E)); (SP) <- (SP) - 2
0xD6  SUI D8	    [ 1 1 0 1  0 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) - (byte 2)
0xD7  RST 2	    [ 1 1 0 1  0 1 1 1 ]	1	-		CALL 0x10
0xD8  RC	    [ 1 1 0 1  1 0 0 0 ]	1	-		If (CY = 1), RET

0xDA  JC  A16	    [ 1 1 0 1  1 0 1 0 ]	3	-		If (CY = 1), PC <- (byte 3)(byte 2)
0xDB  IN P8	    [ 1 1 0 1  1 0 1 1 ]	2	-		(A) <- (data)
0xDC  CC A16	    [ 1 1 0 1  1 1 0 0 ]	3	-		If (CY = 1), CALL a16
0xDD  *CALL A16
0xDE  SBI D8	    [ 1 1 0 1  1 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) - (byte 2) - (CY)
0xDF  RST 3	    [ 1 1 0 1  1 1 1 1 ]	1	-		CALL 0x18
0xE0  RPO	    [ 1 1 1 0  0 0 0 0 ]	1	-		If (P = 0), RET
0xE1  POP H	    [ 1 1 1 0  0 0 0 1 ]	1	-		(H) <- ((SP)); (L) <- ((SP) + 1); (SP) <- (SP) + 2 
0xE2  JPO A16	    [ 1 1 1 0  0 0 1 0 ]	3	-		If (P = 0), PC <- (byte 3)(byte 2)
0xE3  XTHL	    [ 1 1 1 0  0 0 1 1 ]	1	-		(L) <- ((SP)); (H) <- ((SP) + 1)
0xE4  CPO A16	    [ 1 1 1 0  0 1 0 0 ]	3	-		If (P = 0), CALL a16
0xE5  PUSH H	    [ 1 1 1 0  0 1 0 1 ]	1	-		((SP) - 1) <- (H); ((SP) - 2) <- (L); (SP) <- (SP) - 2
0xE6  ANI D8	    [ 1 1 1 0  0 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) & (byte 2)
0xE7  RST 4	    [ 1 1 1 0  0 1 1 1 ]	1	-		CALL 0x20
0xE8  RPE	    [ 1 1 1 0  1 0 0 0 ]	1	-		If (P = 1), RET
0xE9  PCHL	    [ 1 1 1 0  1 0 0 1 ]	1	-		(PCH) <- (H); (PCL) <- (L)
0xEA  JPE A16 	    [ 1 1 1 0  1 0 1 0 ]	3	-		If (P = 1), PC <- (byte 3)(byte 2)
0xEB  XCHG   	    [ 1 1 1 0  1 0 1 1 ]	1	-		(H) <-> (D), (L) <-> (E)
0xEC  CPE A16	    [ 1 1 1 0  1 1 0 0 ]	3	-		If (P = 1), CALL a16

0xEE  XRI D8	    [ 1 1 1 0  1 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) ^ (byte 2))
0xEF  RST 5	    [ 1 1 1 0  1 1 1 1 ]	-	-		CALL 0x28
0xF0  RP	    [ 1 1 1 1  0 0 0 0 ]	1	-		If (S = 0), RET
0xF1  POP PSW	    [ 1 1 1 1  0 0 0 1 ]	1	-		(Flags) <- ((SP)); (A) <- ((SP) + 1); (SP) <- (SP) + 2 
0xF2  JP  A16	    [ 1 1 1 1  0 0 1 0 ]	3	-		If (S = 0), PC <- (byte 3)(byte 2)
0xF3  DI  	    [ 1 1 1 1  0 0 1 1 ]	1	-		Disable interrupts immediately following DI instruction
0xF4  CP A16	    [ 1 1 1 1  0 1 0 0 ]	3	-		If (S = 0), CALL a16
0xF5  PUSH PSW	    [ 1 1 1 1  0 1 0 1 ]	1	-		((SP) - 1) <- (A); ((SP) - 2) <- (Flag byte); (SP) <- (SP) - 2
0xF6  ORI D8	    [ 1 1 1 1  0 1 1 0 ]	2	Z,S,P,CY,AC	(A) <- (A) | (byte 2)
0xF7  RST 6	    [ 1 1 1 1  0 1 1 1 ]	1	-		CALL 0x30
0xF8  RM	    [ 1 1 1 1  1 0 0 0 ]	1	-		If (S = 1), RET
0xF9  SPHL	    [ 1 1 1 1  1 0 0 1 ]	1	-		(SP) = (H)(L)
0xFA  JM  A16	    [ 1 1 1 1  1 0 1 0 ]	3	-		If (S = 1), PC <- (byte 3)(byte 2)
0xFB  EI  	    [ 1 1 1 1  1 0 1 1 ]	1	-		Enable interrupts following next instruction
0xFC  CM A16	    [ 1 1 1 1  1 1 0 0 ]	3	-		If (S = 1), CALL a16

0xFE  CPI D8 	    [ 1 1 1 1  1 1 1 0 ]	2	Z,S,P,CY,AC	(A) - (byte 2)
0xFF  RST 7	    [ 1 1 1 1  1 1 1 1 ]	1	-		CALL 0x38
